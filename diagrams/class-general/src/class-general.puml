@startuml
'https://plantuml.com/object-diagram
skinparam classAttributeIconSize 0

package "hogwartSim.general" {

    interface IRandomizable{
        +getSeed(): long
        +setSeed(long): long
    }
    interface IGeneral{
        +getMap(): IMap
        +setMap(IMap): void
    }
    abstract class "General"{
        #rnd: Rnd
        #seed: long
        #map: IMap

        +General(IMap)
        +getSeed(): long
        +setSeed(long): long
        +getMap(): IMap
        +setMap(IMap): void
    }
    interface ICreature{
        +move(): void
    }
    abstract class Creature{
        +Creature(String)
        +move(): void
    }
'class House{
'   #memberList: List<Wizard>
'   -sortingHat(String): String
'}
    interface IKill{
        +kill(Student): void
    }
    class Basilisk{
        +Basilisk(String)
        +kill(Student): void
    }
    interface IUseItem{
        +useItem(Item): void
    }
    abstract class Wizard{
        #house: String

        +Wizard(String, String)
    }
    class Student{
        #isAlive: boolean

        +Student(String, String)
        +useItem(Item): void
        +die(): void
    }
    interface IPointGetter{
        +addPoints(String): void
    }
    class Teacher{
        +Teacher(String, String)
        +isTheSameHouse(String): boolean
        +addPoints(String): void
    }
    abstract class Item{
        #isUsed: boolean

        +Item(String)
        +getUsed(): void
        +addPoints(String): void
    }
    class ButterBeer{
        +ButterBeer(String)
    }
IGeneral <|-- General
IRandomizable <|-- General
IKill <|-- Basilisk
'House *-- Wizard
IPointGetter <|-- Teacher
IPointGetter <|-- Item
Item <|-- ButterBeer
General *-- ICreature
ICreature <|-- Creature
Creature <|-- Basilisk
Creature <|-- Wizard
Wizard <|-- Teacher
Wizard <|-- Student
IUseItem <|-- Student
Student - Teacher
Student - ButterBeer
Student - Basilisk
}
@enduml